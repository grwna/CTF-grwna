<+0>:     endbr64 
<+4>:     push   rbp
<+5>:     mov    rbp,rsp
<+8>:     mov    DWORD PTR [rbp-0x14],edi
<+11>:    mov    QWORD PTR [rbp-0x20],rsi
<+15>:    mov    DWORD PTR [rbp-0xc],0x9fe1a  //
<+22>:    mov    DWORD PTR [rbp-0x8],0x4      //
<+29>:    mov    eax,DWORD PTR [rbp-0xc]      //
<+32>:    imul   eax,DWORD PTR [rbp-0x8]      //
<+36>:    add    eax,0x1f5                    //
<+41>:    mov    DWORD PTR [rbp-0x4],eax      //
<+44>:    mov    eax,DWORD PTR [rbp-0x4]      //
<+47>:    pop    rbp
<+48>:    ret

// -> important lines

First, eax contains 0x9fe1a
rbp-8 is 0x4
then eax is multiplied with rb-8, resulting in 0x27f868
Then this is added with 0x1f5 resulting in 0x27fa5d, this is the answer (in decimal)

picoCTF{2619997}